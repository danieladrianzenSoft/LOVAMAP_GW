version: '3.8'

services:
  db:
    image: postgres:17
    container_name: lovamap_db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./GatewayBackend
      args:
        ENVIRONMENT: production
    ports:
      - "5001:8080"
    volumes:
      - ./GatewayBackend/Data/Domains:/app/Data/Domains
    depends_on:
      db:
        condition: service_healthy
    env_file:
        - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx:
    build:
      context: ./GatewayUI/react-ui
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.production.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - backend
    environment:
      - CERTBOT_INIT=false # Will be set to true once certificates exist
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  certbot:
    image: certbot/certbot
    profiles: ["production"]
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
        sh -c "
          if [ \"$ENVIRONMENT\" = \"production\" ]; then
            if [ ! -f /etc/letsencrypt/live/lovamap.com/fullchain.pem ]; then
              certbot certonly --webroot -w /var/www/certbot --email admin@mimccore.com --agree-tos --no-eff-email --force-renewal -d lovamap.com -d www.lovamap.com;
            fi;
            trap exit TERM;
            while :; do certbot renew --webroot -w /var/www/certbot && nginx -s reload; sleep 12h & wait $${!}; done;
          else
            echo 'Skipping Certbot setup - Not in production';
            sleep infinity;
          fi;
        "
volumes:
  postgres_data: